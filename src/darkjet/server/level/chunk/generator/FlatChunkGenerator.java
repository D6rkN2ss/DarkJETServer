package darkjet.server.level.chunk.generator;

import java.util.Arrays;

import darkjet.server.level.chunk.Chunk;
import darkjet.server.level.chunk.ChunkGenerator;

/**
 * a Simple FlatChunkGenerator
 * @author Blue Electric
 */
public final class FlatChunkGenerator extends ChunkGenerator {
	
	public static final byte[] FLATREPEAT = new byte[]{0x07, 0x03, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
	public static final byte[] BIOMECOLOR = new byte[]{0x00 ,(byte) 0x85 ,(byte) 0xb2 ,0x4a};

	@Override
	public void generateChunk(Chunk chunk) {
		for(int i = 0; i < chunk.blockIDs.length; i+=FLATREPEAT.length) {
			System.arraycopy(FLATREPEAT, 0, chunk.blockIDs, i, FLATREPEAT.length);
		}
		Arrays.fill(chunk.biomeIds, (byte) 0xff);
		for(int i = 0; i < chunk.biomeColors.length; i+=BIOMECOLOR.length) {
			System.arraycopy(BIOMECOLOR, 0, chunk.biomeColors, i, BIOMECOLOR.length);
		}
	}

}
